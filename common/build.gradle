apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion buildVersion.targetSdk

    defaultConfig {
        minSdkVersion buildVersion.minAppSdk
        targetSdkVersion buildVersion.targetSdk
        versionCode buildVersion.versionCode
        versionName buildVersion.versionName

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    kapt {
        generateStubs true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // AndroidX
    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "androidx.preference:preference:$versions.preference"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"

    // Constraint
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"

    // Lifecycle
    api "android.arch.lifecycle:extensions:$versions.lifecycle"
    implementation "android.arch.lifecycle:viewmodel:$versions.lifecycle"

    // Dagger
    api "com.google.dagger:dagger-android:$versions.dagger"
    api "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"

    // Room
    api "androidx.room:room-runtime:$versions.room"
    api "androidx.room:room-ktx:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    testImplementation "androidx.room:room-testing:$versions.room"

    // Moshi - Json
    api "com.squareup.moshi:moshi:$versions.moshi"
    api "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"

    // Kotlin Lib
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // Unit Tests
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlin"

    // Core library
    androidTestImplementation "androidx.test:core:$versions.testCore"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$versions.testCore"
    androidTestImplementation "androidx.test:rules:$versions.testCore"
    androidTestUtil "androidx.test:orchestrator:$versions.testCore"
}
