plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion 33

    defaultConfig {
        // versionCode and versionName must be hardcoded to support F-droid
        minSdkVersion 21
        targetSdkVersion 33
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
}

configurations { natives }

dependencies {
    implementation project(':core')
    implementation project(':preferences')
    implementation project(':ui')

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.activity:activity-ktx:1.5.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.2'

    // Koin
    implementation 'io.insert-koin:koin-android:3.1.2'
    testImplementation 'io.insert-koin:koin-test:3.1.2'

    // LibGDX
    api 'com.badlogicgames.gdx:gdx-backend-android:1.11.0'
    api 'com.badlogicgames.gdx:gdx:1.11.0'
    natives 'com.badlogicgames.gdx:gdx-platform:1.11.0:natives-armeabi-v7a'
    natives 'com.badlogicgames.gdx:gdx-platform:1.11.0:natives-arm64-v8a'
    natives 'com.badlogicgames.gdx:gdx-platform:1.11.0:natives-x86'
    natives 'com.badlogicgames.gdx:gdx-platform:1.11.0:natives-x86_64'
}

task copyAndroidNatives {
    doFirst {
        file("libs/armeabi-v7a/").mkdirs()
        file("libs/arm64-v8a/").mkdirs()
        file("libs/x86_64/").mkdirs()
        file("libs/x86/").mkdirs()

        configurations.natives.files.each { jar ->
            def outputDir = null
            if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
            if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
            if (jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
            if (jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
            if (outputDir != null) {
                copy {
                    from zipTree(jar)
                    into outputDir
                    include "*.so"
                }
            }
        }
    }
}

preBuild.dependsOn copyAndroidNatives
